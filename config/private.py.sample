# -*- coding: utf-8 -*-

#
# Copyright Adam Pritchard 2014
# MIT License : https://adampritchard.mit-license.org/
#

"""Configuration values that we don't want to check into (public) source control.
"""

import urllib.parse

#
# Project config and environment
#

# Site origins (scheme://hostname:port) that are allowed to embed the self-serve pages.
SELF_SERVE_ALLOWED_EMBED_ORIGINS = ['https://actual-community-association-site.com', 'https://testbucket.s3.amazonaws.com']


#
# Organization info
#

# This must be the address used for sending email
MASTER_EMAIL_ADDRESS = 'your-gmail-account@gmail.com'
MASTER_EMAIL_SEND_NAME = 'Your Neighbourhood Community Association'


#
# App Engine secrets
#

# If your GAE app is at "myapp.appspot.com", then you can set up these creds at:
# https://console.cloud.google.com/apis/credentials?project=myapp
# You need one each of service account (used for spreadsheets API calls), server
# API key (used for geocoding API calls), and browser API key (used for maps
# API calls).
SERVICE_ACCOUNT_CREDS_JSON_FILE_PATH = 'myproject-abcd1234.json'
GOOGLE_SERVER_API_KEY = 'abc123'
GOOGLE_BROWSER_API_KEY = 'xyz789'

# Instructions to obtain are here: https://developers.google.com/identity/sign-in/web/sign-in
GOOGLE_SIGNIN_CLIENT_ID = 'abcd1234.apps.googleusercontent.com'

# Generate a big random secret and put it here (maybe `openssl rand -hex 32`).
FLASK_SECRET_KEY = 'some very large random secret'


#
# Payment and PayPal info
#

# When testing, this will probably be "youremail-facilitator@gmail.com"
PAYPAL_TXN_receiver_email = 'youremail@gmail.com'
PAYPAL_TXN_item_name = 'DECA Membership - 1 year'

# This is the URL that we'll send the user to so they can pay.
# You get this URL when you use the PayPal web interface to create a payment
# button. (We don't actually use the button <form>.)
# NOTE: When testing, make sure this is www.sandbox.paypal.com!
# NOTE: Hosted buttons don't seem to be what you get anymore when creating a button, so
# this will have to change.
PAYPAL_PAYMENT_URL = 'https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ABC123'
PAYPAL_PAYMENT_URL += f"&{urllib.parse.urlencode({'item_name': PAYPAL_TXN_item_name})}"
PAYPAL_PAYMENT_URL += '&invoice=%s'


#
# Email info
#

SMTP_HOST = 'smtp.gmail.com'
SMTP_PORT = 587
SMTP_PASSWORD = 'abc123'
# The associated email address must be MASTER_EMAIL_ADDRESS


#
# MailChimp info
#

MAILCHIMP_ENABLED = True
MAILCHIMP_DATACENTER = 'us2'
MAILCHIMP_API_KEY = 'abc123'
MAILCHIMP_MEMBERS_LIST_ID = 'abc123'
MAILCHIMP_MEMBER_TYPE_MERGE_TAG = 'MMBR_TYPE'
MAILCHIMP_MEMBER_TYPE_MEMBER = 'Member'
MAILCHIMP_MEMBER_TYPE_VOLUNTEER = 'Volunteer'


#
# Spreadsheet keys
#
# Note: Figuring out the key for the first worksheet is a hassle (unlike the spreadsheet
# key it's not shown in the URL). You can use our first_sheet_titles.py utility to help.

AUTHORIZED_SPREADSHEET_ID = 'abc123'
MEMBERS_WORKSHEET_TITLE = 'Sheet1'
MEMBERS_WORKSHEET_ID = 0

VOLUNTEER_INTERESTS_SPREADSHEET_ID = 'abc123'
VOLUNTEER_INTERESTS_SPREADSHEET_WORKSHEET_TITLE = 'Sheet1'
VOLUNTEER_INTERESTS_SPREADSHEET_WORKSHEET_ID = 0

SKILLS_CATEGORIES_SPREADSHEET_ID = 'abc123'
SKILLS_CATEGORIES_SPREADSHEET_WORKSHEET_TITLE = 'Sheet1'
SKILLS_CATEGORIES_SPREADSHEET_WORKSHEET_ID = 0

MEMBERS_SPREADSHEET_ID = 'abc123'
MEMBERS_SPREADSHEET_WORKSHEET_TITLE = 'Sheet1'
MEMBERS_SPREADSHEET_WORKSHEET_ID = 0

VOLUNTEERS_SPREADSHEET_ID = 'abc123'
VOLUNTEERS_SPREADSHEET_WORKSHEET_TITLE = 'Sheet1'
VOLUNTEERS_SPREADSHEET_WORKSHEET_ID = 0
